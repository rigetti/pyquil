[tool.poetry]
name = "pyquil"
version = "4.15.0"
description = "A Python library for creating Quantum Instruction Language (Quil) programs."
authors = ["Rigetti Computing <softapps@rigetti.com>"]
readme = "README.md"
repository = "https://github.com/rigetti/pyquil.git"
documentation = "https://pyquil-docs.rigetti.com"
license = "Apache-2.0"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Operating System :: OS Independent",
]
keywords = ["quantum", "quil", "programming", "hybrid"]
packages = [{ include = "pyquil" }]
exclude = ["pyquil/conftest.py"]

[tool.poetry.dependencies]
python = "^3.9,<4.0"
numpy = "^1.25"
scipy = "^1.11"
rpcq = "^3.11.0"
networkx = ">=2.5"
qcs-sdk-python = ">=0.20.1"
quil = ">=0.13.2"
packaging = "^23.1"
deprecated = "^1.2.14"
types-deprecated = "^1.2.9.3"

# latex extra
ipython = { version = "^8.16.0", optional = true }

# docs extra
Sphinx = { version = "^7.3.7", optional = true }
sphinx-rtd-theme = { version = "^1.3.0,<=2.0.0", optional = true }
nbsphinx = { version = "^0.9.3", optional = true }
myst-parser = { version = "^3.0.1", optional = true }
pandoc = {version = "2.4b0", optional = true}
matplotlib = {version = "^3.9.0", optional = true}
matplotlib-inline = {version = "^0.1.7", optional = true}
seaborn = {version = "^0.13.2", optional = true}

[tool.poetry.extras]
latex = ["ipython"]
docs = ["Sphinx", "sphinx-rtd-theme", "nbsphinx", "myst-parser", "pandoc", "matplotlib", "matlotlib-inline", "seaborn", "toml"]

[tool.poetry.group.dev.dependencies]
typing-extensions = "^4.12.0"
setuptools = {version = "^70.0.0", python = ">=3.12"}
ruff = "^0.4.6"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
toml = "^0.10.2"
pytest-xdist = "^3.6.1"
pytest-rerunfailures = "^14.0.0"
pytest-timeout = "^2.3.1"
pytest-mock = "^3.14.0"
pytest-benchmark = "4.0.0"
respx = "^0.21.1"
syrupy = "^4.6.1"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["D", "E4", "E7", "E9", "F", "I", "B", "S", "UP", "W", "NPY201"]
ignore = [
  "D105",  # Allow missing documentation in dunder method.
  "D203",  # This conflicts with D211.
  "D213",  # This conflicts with D212.
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = [
    "D",    # docstrings are not enforced in tests
    "S101", # asserts are allowed in tests
    "S301", # we only deserialize our own data to ensure compatibility with the pickle module
]

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:pyquil.*:", "ignore::DeprecationWarning:test.unit.*:"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
