# serializer version: 1
# name: TestProgram.test_calibrations
  list([
    Calibration { instructions: [Gate(Gate { name: "X", parameters: [], qubits: [Fixed(0)], modifiers: [] })], modifiers: [], name: "Calibrate", parameters: [], qubits: [Fixed(0)] },
    Calibration { instructions: [Gate(Gate { name: "Y", parameters: [], qubits: [Fixed(1)], modifiers: [] })], modifiers: [], name: "Reticulating-Splines", parameters: [Variable("Spline")], qubits: [Fixed(1)] },
  ])
# ---
# name: TestProgram.test_calibrations.1
  list([
    MeasureCalibrationDefinition { qubit: Some(Fixed(2)), parameter: "theta", instructions: [Gate(Gate { name: "Z", parameters: [], qubits: [Fixed(2)], modifiers: [] })] },
  ])
# ---
# name: TestProgram.test_frames
  dict({
    FrameIdentifier { name: "frame", qubits: [Fixed(1)] }: FrameDefinition { identifier: FrameIdentifier { name: "frame", qubits: [Fixed(1)] }, attributes: {"CENTER-FREQUENCY": Expression(Number(Complex { re: 440.0, im: 0.0 }))} },
    FrameIdentifier { name: "other_frame", qubits: [Fixed(1)] }: FrameDefinition { identifier: FrameIdentifier { name: "other_frame", qubits: [Fixed(1)] }, attributes: {"CENTER-FREQUENCY": Expression(Number(Complex { re: 432.0, im: 0.0 }))} },
  })
# ---
# name: test_binary_classicals
  '''
  AND ro[0] ro[1]
  MOVE ro[0] ro[1]
  CONVERT ro[0] ro[1]
  IOR ro[0] ro[1]
  XOR ro[0] ro[1]
  ADD ro[0] ro[1]
  SUB ro[0] ro[1]
  MUL ro[0] ro[1]
  DIV ro[0] ro[1]
  EXCHANGE ro[0] ro[1]
  
  '''
# ---
# name: test_classical_regs
  '''
  DECLARE reg BIT[2]
  DECLARE ro BIT[2]
  X 0
  MEASURE 0 reg[1]
  
  '''
# ---
# name: test_construction_syntax
  '''
  DECLARE ro BIT[2]
  X 0
  Y 1
  Z 0
  MEASURE 0 ro[1]
  
  '''
# ---
# name: test_construction_syntax.1
  '''
  DECLARE ro BIT[3]
  X 0
  Y 1
  MEASURE 0 ro[1]
  MEASURE 1 ro[2]
  
  '''
# ---
# name: test_construction_syntax.2
  '''
  DECLARE ro BIT[2]
  X 0
  MEASURE 0 ro[1]
  Y 1
  X 0
  MEASURE 0 ro[0]
  
  '''
# ---
# name: test_controlled_gates
  '''
  CNOT 0 1
  CCNOT 0 1 2
  
  '''
# ---
# name: test_copy
  '''
  H 0
  CNOT 0 1
  
  '''
# ---
# name: test_copy.1
  '''
  DECLARE ro BIT[2]
  H 0
  CNOT 0 1
  MEASURE 0 ro[0]
  MEASURE 1 ro[1]
  
  '''
# ---
# name: test_def_gate
  '''
  DEFGATE SQRT-X AS MATRIX:
  	0.5+0.5i, 0.5-0.5i
  	0.5-0.5i, 0.5+0.5i
  
  SQRT-X 0
  
  '''
# ---
# name: test_def_gate_with_parameters
  '''
  DEFGATE MY_RX(%theta) AS MATRIX:
  	cos(%theta/2), -1.0i*sin(%theta/2)
  	-1.0i*sin(%theta/2), cos(%theta/2)
  
  
  '''
# ---
# name: test_def_gate_with_parameters.1
  '''
  MY_RX(3.141592653589793) 0
  
  '''
# ---
# name: test_defcal_redefinition
  'RX(3.141592653589793) 1'
# ---
# name: test_defcal_redefinition.1
  'RX(1.5707963267948966) 1'
# ---
# name: test_defcalmeasure_redefinition
  'RX(3.141592653589793) 1'
# ---
# name: test_defcalmeasure_redefinition.1
  'RX(1.5707963267948966) 1'
# ---
# name: test_defgate
  '''
  DEFGATE TEST AS MATRIX:
  	1, 0
  	0, 1
  
  '''
# ---
# name: test_defgate.1
  'TEST 1 2'
# ---
# name: test_defgate.2
  'TEST 1 2'
# ---
# name: test_defgate_param
  '''
  DEFGATE TEST AS MATRIX:
  	1, 0
  	0, 1
  
  '''
# ---
# name: test_defgate_param.1
  'TEST 1'
# ---
# name: test_define_qft
  '''
  X 0
  H 2
  CPHASE(1.5707963267948966) 1 2
  H 1
  CPHASE(0.7853981633974483) 0 2
  CPHASE(1.5707963267948966) 0 1
  H 0
  SWAP 0 2
  
  '''
# ---
# name: test_gate
  'TEST 1 2'
# ---
# name: test_inst_gates
  '''
  H 0
  X 1
  
  '''
# ---
# name: test_inst_rs_gate
  '''
  X 0
  
  '''
# ---
# name: test_inst_string
  '''
  Y 0
  X 1
  
  '''
# ---
# name: test_inst_tuple
  '''
  Y 0
  X 1
  
  '''
# ---
# name: test_inst_tuple_measure
  '''
  MEASURE 0 ro[1]
  
  '''
# ---
# name: test_inst_tuple_multiple_params
  '''
  RX(1.5707963267948966) 0
  
  '''
# ---
# name: test_kraus
  '''
  X 0
  PRAGMA NO-NOISE
  X 1
  
  '''
# ---
# name: test_measure_all
  '''
  DECLARE ro BIT[4]
  MEASURE 0 ro[0]
  MEASURE 1 ro[1]
  MEASURE 2 ro[3]
  
  '''
# ---
# name: test_measure_all_noncontig
  '''
  DECLARE ro BIT[11]
  H 0
  H 10
  MEASURE 0 ro[0]
  MEASURE 10 ro[10]
  
  '''
# ---
# name: test_measurement_calls
  '''
  DECLARE ro BIT[2]
  MEASURE 0 ro[1]
  MEASURE 0 ro[1]
  
  '''
# ---
# name: test_memory_reference_unpacking
  '''
  AND ro[0] ro[1]
  MOVE ro[0] ro[1]
  CONVERT ro[0] ro[1]
  IOR ro[0] ro[1]
  XOR ro[0] ro[1]
  ADD ro[0] ro[1]
  SUB ro[0] ro[1]
  MUL ro[0] ro[1]
  DIV ro[0] ro[1]
  EXCHANGE ro[0] ro[1]
  
  '''
# ---
# name: test_merge_with_pauli_noise
  '''
  DEFGATE pauli_noise AS MATRIX:
  	1, 0
  	0, 1
  
  PRAGMA ADD-KRAUS pauli_noise 0 "(0.0 0.0 0.0 0.0)"
  PRAGMA ADD-KRAUS pauli_noise 0 "(0.0 1.0 1.0 0.0)"
  PRAGMA ADD-KRAUS pauli_noise 0 "(0.0 0.0 0.0 0.0)"
  PRAGMA ADD-KRAUS pauli_noise 0 "(0.0 0.0 0.0 -0.0)"
  X 0
  pauli_noise 0
  Z 0
  pauli_noise 0
  
  '''
# ---
# name: test_multiqubit_gate
  '''
  DEFGATE X-SQRT-X AS MATRIX:
  	0, 0.5+0.5i, 0, 0.5-0.5i
  	0.5+0.5i, 0, 0.5-0.5i, 0
  	0, 0.5-0.5i, 0, 0.5+0.5i
  	0.5-0.5i, 0, 0.5+0.5i, 0
  
  X-SQRT-X 0 1
  
  '''
# ---
# name: test_pauli_gate
  '''
  DEFGATE U(%beta) p q AS PAULI-SUM:
  	ZZ((-1*%beta)/4) p q
  	Z(%beta/4) p
  	Z(%beta/4) q
  
  DEFGATE V AS MATRIX:
  	1, 0
  	0, 1
  
  U(2) 1 0
  
  '''
# ---
# name: test_phases
  '''
  PHASE(3.141592653589793) 1
  CPHASE00(3.141592653589793) 0 1
  CPHASE01(3.141592653589793) 0 1
  CPHASE10(3.141592653589793) 0 1
  CPHASE(3.141592653589793) 0 1
  
  '''
# ---
# name: test_plus_operator
  '''
  H 0
  X 0
  Y 0
  Z 0
  
  '''
# ---
# name: test_prog_init
  '''
  DECLARE ro BIT[1]
  X 0
  MEASURE 0 ro[0]
  
  '''
# ---
# name: test_prog_merge
  '''
  DEFGATE test AS MATRIX:
  	1, 0
  	0, 1
  
  X 0
  test 0
  Y 0
  test 0
  
  '''
# ---
# name: test_prog_merge.1
  '''
  DEFGATE test AS MATRIX:
  	1, 0
  	0, 1
  
  DEFGATE PERM AS PERMUTATION:
  	0, 1, 3, 2
  
  X 0
  test 0
  PERM 0 1
  Y 0
  test 0
  PERM 1 0
  
  '''
# ---
# name: test_prog_merge.2
  '''
  DECLARE ro BIT[1]
  H 0
  MEASURE 0 ro[0]
  
  '''
# ---
# name: test_program_string
  '''
  Y 0
  X 1
  
  '''
# ---
# name: test_program_tuple
  '''
  Y 0
  X 1
  
  '''
# ---
# name: test_rotations
  '''
  RX(0.5) 0
  RY(0.1) 1
  RZ(1.4) 2
  
  '''
# ---
# name: test_simple_instructions
  '''
  HALT
  WAIT
  RESET
  NOP
  
  '''
# ---
# name: test_singles
  '''
  I 0
  X 0
  Y 1
  Z 1
  H 2
  T 2
  S 1
  
  '''
# ---
# name: test_swaps
  '''
  SWAP 0 1
  CSWAP 0 1 2
  ISWAP 0 1
  PSWAP(3.141592653589793) 0 1
  
  '''
# ---
# name: test_ternary_classicals
  '''
  LOAD ro[0] ro n[0]
  STORE ro n[0] ro[0]
  STORE ro n[0] 0
  STORE ro n[0] 0.1
  EQ ro[0] ro[1] 0
  EQ ro[0] ro[1] 0
  EQ ro[0] ro[1] ro[0]
  GE ro[0] ro[1] 1
  GE ro[0] ro[1] 1.1
  GE ro[0] ro[1] ro[1]
  GT ro[0] ro[1] 2
  GT ro[0] ro[1] 2.2
  GT ro[0] ro[1] ro[2]
  LE ro[0] ro[1] 3
  LE ro[0] ro[1] 3.3
  LE ro[0] ro[1] ro[3]
  LT ro[0] ro[1] 4
  LT ro[0] ro[1] 4.4
  LT ro[0] ro[1] ro[4]
  
  '''
# ---
# name: test_unary_classicals
  '''
  MOVE ro[0] 1
  MOVE ro[1] 0
  NOT ro[2]
  NEG ro[3]
  
  '''
# ---
